version: '3.9'

services:
  question-service:
    container_name: question-service
    restart: on-failure
    build: 
      context: ./services/question-service
      args:
        - PORT=${QUESTION_PORT}
    ports:
      - "${QUESTION_PORT}:${QUESTION_PORT}"
    environment:
      PORT: ${QUESTION_PORT}
      DB_CLOUD_URI: ${QUESTION_DB_CLOUD_URI}     
      DB_LOCAL_URI: ${QUESTION_DB_LOCAL_URI}    
      ENV: ${ENV}                     
    depends_on:
      - question-db
    networks:
      - app-network

  question-db:
    image: mongodb/mongodb-atlas-local
    ports:
      - "27018:27018"
    networks:
      - app-network

  user-service:
    container_name: user-service
    restart: on-failure
    build: 
      context: ./services/user-service
      args:
        - PORT=${USER_PORT}
    ports:
      - "${USER_PORT}:${USER_PORT}"
    environment:
      PORT: ${USER_PORT}
      DB_CLOUD_URI: ${USER_DB_CLOUD_URI}     
      DB_LOCAL_URI: ${USER_DB_LOCAL_URI}    
      ENV: ${ENV}       
      JWT_SECRET: ${JWT_SECRET}                   
    depends_on:
      - user-db
    networks:
      - app-network

  user-db:
    image: mongodb/mongodb-atlas-local
    ports:
      - "27019:27019"
    networks:
      - app-network

  matching-service:
    container_name: matching-service
    restart: on-failure
    build: 
      context: ./services/matching-service
      args:
        - PORT=${MATCHING_PORT}
        - REDIS_HOST=redis
        - REDIS_PORT=6379
    ports:
      - "${MATCHING_PORT}:${MATCHING_PORT}"
    environment:
      PORT: ${MATCHING_PORT}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ENV: ${ENV}
    depends_on:
      - redis
    networks:
      - app-network

  collaboration-service:
    container_name: collaboration-service
    restart: on-failure
    build: 
      context: ./services/collaboration-service
      args:
        - PORT=${COLLAB_PORT}
    ports:
      - "${COLLAB_PORT}:${COLLAB_PORT}"
    environment:
      PORT: ${COLLAB_PORT}
      ENV: ${ENV}
      DB_CLOUD_URI: ${COLLAB_DB_CLOUD_URI}     
      DB_LOCAL_URI: ${COLLAB_DB_LOCAL_URI}  
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - app-network

  api-gateway:
    container_name: api-gateway
    restart: on-failure
    build:
      context: ./services/api-gateway
      args:
        - PORT=${GATEWAY_PORT}
        - MATCHING_PORT=${MATCHING_PORT}
        - QUESTION_PORT=${QUESTION_PORT}
        - USER_PORT=${USER_PORT}
        - COLLAB_PORT=${COLLAB_PORT}
        - USER_URL=http://user-service
        - QUESTION_URL=http://question-service
        - COLLAB_URL=http://collaboration-service
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      PORT: ${GATEWAY_PORT}
      QUESTION_PORT: ${QUESTION_PORT}
      USER_PORT: ${USER_PORT}
      COLLAB_PORT: ${COLLAB_PORT}
      USER_URL: http://user-service
      MATCHING_URL: http://matching-service
      QUESTION_URL: http://question-service
      COLLAB_URL: http://collaboration-service
    depends_on:
      - question-service
      - user-service
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000" 
    volumes:
      - ./frontend:/app 
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - app-network

  history-service: 
    build: 
      context: ./services/history-service
      args:
        - PORT=${HISTORY_PORT}
    ports:
      - "${HISTORY_PORT}:${HISTORY_PORT}"
    environment:
      PORT: ${HISTORY_PORT}
      DB_CLOUD_URI: ${HISTORY_DB_CLOUD_URI}
      DB_LOCAL_URI: ${HISTORY_DB_LOCAL_URI}
      ENV: ${ENV}
    depends_on:
      - history-db
    networks:
      - app-network

  history-db:
    image: mongodb/mongodb-atlas-local
    ports:
      - "27020:27020"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge